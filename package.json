{
  "name": "stm32-for-vscode",
  "displayName": "stm32-for-vscode",
  "description": "An extension for: setting up, compiling, uploading and debugging STM32 applications",
  "version": "2.0.0",
  "engines": {
    "vscode": "^1.38.0"
  },
  "icon": "icon.png",
  "keywords": [
    "STM32",
    "stm",
    "Nucleo",
    "CubeMX"
  ],
  "publisher": "thinker",
  "repository": "https://github.com/thinksrc/stm32-for-vscode",
  "categories": [
    "Other"
  ],
  "activationEvents": [
    "onCommand:stm32-for-vscode.build",
    "onCommand:stm32-for-vscode.init",
    "onCommand:stm32-for-vscode.cleanBuild"
  ],
  "main": "./dist/extension.js",
  "contributes": {
    "taskDefinitions": [
      {
        "type": "STM32",
        "required": [],
        "properties": {}
      }
    ],
    "commands": [
      {
        "command": "stm32-for-vscode.build",
        "title": "Build STM32 project"
      },
      {
        "command": "stm32-for-vscode.flash",
        "title": "Build and flash to an STM32 platform"
      },
      {
        "command": "stm32-for-vscode.cleanBuild",
        "title": "Build clean STM32 project"
      }
    ],
    "configuration": {
      "type": "object",
      "title": "STM32 for VSCode configuration",
      "properties": {
        "stm32-for-vscode.stlinkPath": {
          "type": "string",
          "default": "",
          "description": "Path to stlink, will use the one in PATH or the cortex-debug settings automatically"
        },
        "stm32-for-vscode.makePath": {
          "type": "string",
          "default": "",
          "description": "Path to make, will use the one in PATH as standard."
        },
        "stm32-for-vscode.armToolchainPath": {
          "type": "string",
          "default": "",
          "description": "Path to the GCC Arm Toolchain (prefix arm-none-eabi) to use, will use the one in PATH or the cortex-debug settings as default"
        }
      }
    }
  },
  "extensionDependencies": [
    "marus25.cortex-debug"
  ],
  "scripts": {
    "vscode:prepublish": "webpack --mode production",
    "webpack": "webpack --mode development",
    "webpack-dev": "webpack --mode development --watch",
    "webpack-test": "webpack --mode development --config webpack.config-test.js",
    "compile-test": "babel test -d out/test --copy-files && babel src -d out/src",
    "test": "mocha ./out/runTest.js",
    "build": "webpack -p",
    "compile": "webpack --mode development"
  },
  "devDependencies": {
    "@babel/cli": "^7.6.0",
    "@babel/core": "^7.6.0",
    "@babel/preset-env": "^7.6.0",
    "@types/glob": "^7.1.1",
    "@types/mocha": "^5.2.6",
    "@types/node": "^10.12.21",
    "@types/vscode": "1.38",
    "babel-core": "^6.26.3",
    "babel-loader": "^8.0.6",
    "babel-polyfill": "^6.26.0",
    "babel-preset-es2015": "^6.24.1",
    "eslint": "^5.16.0",
    "eslint-config-airbnb-base": "^13.1.0",
    "eslint-plugin-import": "^2.17.2",
    "glob": "^7.1.4",
    "mocha": "^6.1.4",
    "sinon": "^7.4.2",
    "typescript": "^3.3.1",
    "vscode-test": "^1.2.0",
    "webpack": "^4.39.3",
    "webpack-cli": "^3.3.2"
  },
  "dependencies": {
    "json5": "^2.1.0",
    "lodash": "^4.17.15",
    "recursive-readdir": "^2.2.2",
    "shelljs": "^0.8.3"
  },
  "taskDefinitions": {}
}
